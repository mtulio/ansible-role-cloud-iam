---
- name: Set role_name
  set_fact:
    role_name: "{{ item_role.iam_name }}"

- name: Dump current role item
  debug:
    var: item_role

- name: "{{ role_name }} - Define iam_policy_document"
  set_fact:
    iam_policy_document: "{{
        lookup(item_role.iam_policy_type, item_role.iam_policy_path)
      }}"
  when: item_role.iam_policy_type is defined

- name: "{{ role_name }} - Undefine iam_policy_document"
  set_fact:
    iam_policy_document: ''
  when: item_role.iam_policy_type is not defined

- name: "{{ role_name }} - Ensuring exists with no managed and trusted policy"
  iam:
    name: "{{ role_name }}"
    iam_type: role
    state: present
  when: (item_role.iam_managed_policies is not defined) \
        and (iam_policy_document == '')

- name: "{{ role_name }} - Ensuring IAM role exists with no managed policy"
  iam:
    name: "{{ role_name }}"
    type: role
    state: present
    trust_policy_filepath: "{{ iam_policy_document }}"
  when: item_role.iam_managed_policies is not defined \
        and (iam_policy_document != '')

## #TODO: make this task indempotent
- name: "{{ role_name }} - Ensuring IAM role exists with managed policy"
  iam_role:
    name: "{{ role_name }}"
    state: present
    assume_role_policy_document: "{{ iam_policy_document }}"
    managed_policy: "{{ item_role.iam_managed_policies }}"
  when: item_role.iam_managed_policies is defined

# To keep compability with s3 policies templates, we'll keep this task
- name: "{{ role_name }} - Create policies of S3 buckets"
  iam_policy:
    iam_type: role
    iam_name: "{{ role_name }}"
    state: present
    policy_name: "{{ item.service }}_{{ item.bucket }}_{{ item.mode }}"
    policy_json: "{{ lookup(item.file_type, item.file_path) | to_nice_json }}"
    with_items: "{{ item_role.iam_s3_policies }}"
  when: item_role.iam_s3_policies is defined

- name: "{{ role_name }} - Create generic resources policies"
  iam_policy:
    iam_type: role
    iam_name: "{{ role_name }}"
    state: present
    policy_name: "{{ item.service }}_{{ item.resource }}_{{ item.mode }}"
    policy_json: "{{ lookup(item.file_type, item.file_path) | to_nice_json }}"
    with_items: "{{ item_role.iam_resources_policies }}"
  when: item_role.iam_resources_policies is defined

- name: "{{ role_name }} - Undefine iam_policy_document"
  set_fact:
    iam_policy_document: ''
